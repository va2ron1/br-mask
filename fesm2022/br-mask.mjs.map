{"version":3,"file":"br-mask.mjs","sources":["../../src/directives/br-mask.directive.ts","../../src/app.module.ts","../../src/public-api.ts","../../src/br-mask.ts"],"sourcesContent":["import { Directive, ElementRef, Host, HostListener, Injectable, Input, OnInit, Optional, SkipSelf } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroupDirective } from '@angular/forms';\n\nexport class BrMaskModel {\n  form?: AbstractControl;\n  mask?: string;\n  len?: number;\n  person?: boolean;\n  phone?: boolean;\n  phoneNotDDD?: boolean;\n  money?: boolean;\n  percent?: boolean;\n  type?: 'alfa' | 'num' | 'all' = 'alfa';\n  decimal?: number = 2;\n  decimalCaracter?: string = `,`;\n  thousand?: string;\n  userCaracters?: boolean = false;\n  numberAndTousand?: boolean = false;\n  moneyInitHasInt?: boolean = true;\n}\n\n@Directive({\n  selector: '[brmasker]',\n  standalone: false,\n})\n\n@Injectable()\nexport class BrMaskDirective implements OnInit {\n  /* TODO */\n  @Input() brmasker: any = new BrMaskModel();\n  @Input() formControlName!: string;\n\n  /**\n  * Event key up in directive\n  * @constant {string} value\n  */\n  @HostListener('keyup', ['$event'])\n  inputKeyup(event: any): void {\n    const value: string = this.returnValue(event.target.value);\n    this.setValueInFormControl(value);\n  }\n  @HostListener('ngModelChange', ['$event']) onNgModelChange(e: any) {\n    const value: string = this.returnValue(e);\n    if (value) {\n      this.setValueInFormControl(value, false);\n    }\n  }\n\n  constructor(\n    @Optional() @Host() @SkipSelf()\n    private controlContainer: FormGroupDirective,\n    private elementRef: ElementRef\n  ) { }\n\n  ngOnInit(): void {\n    if (!this.brmasker.type) {\n      this.brmasker.type = 'all';\n    }\n\n    if (!this.brmasker.decimal) {\n      this.brmasker.decimal = 2;\n    }\n    if (this.brmasker.moneyInitHasInt === undefined) {\n      this.brmasker.moneyInitHasInt = true;\n    }\n\n    if (!this.brmasker.decimalCaracter) {\n      this.brmasker.decimalCaracter = ',';\n    }\n    if (this.controlContainer) {\n      if (this.formControlName) {\n        this.brmasker.form = this.controlContainer.control.get(this.formControlName);\n      } else {\n        console.warn('Missing FormControlName directive from host element of the component');\n      }\n    } else {\n      console.warn('Can\\'t find parent FormGroup directive');\n    }\n    this.initialValue();\n  }\n\n  initialValue(): void {\n    const value: string = this.returnValue(this.elementRef.nativeElement.value);\n    this.setValueInFormControl(value);\n  }\n\n  /**\n  * The verification of form\n  * @example <caption>this.verifyFormControl()</caption>\n  * @returns {boolean} return a boolean value\n  */\n  verifyFormControl(): boolean {\n    if (this.brmasker.form instanceof FormControl) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n  * Set Value em FormControl\n  * @example <caption>this.setValueInFormControl(string)</caption>\n  */\n  setValueInFormControl(value: string, emitViewToModelChange?: boolean): void {\n    if (!this.verifyFormControl()) {\n      this.elementRef.nativeElement.value = value;\n      return;\n    }\n    this.brmasker.form.setValue(value, { emitViewToModelChange });\n    this.brmasker.form.updateValueAndValidity();\n  }\n\n  /**\n  * For initial value\n  * @example <caption>this.setValueInFormControl(string, model)</caption>\n  * @param {string} value\n  * @param {BrMaskModel} config\n  * @returns {string} mask intial value\n  */\n  writeCreateValue(value: string, config: BrMaskModel = new BrMaskModel()): string {\n    if (value && config.phone) {\n      return value.replace(/^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/gi, '$1 ($2) $3-$4');\n    }\n    if (value && config.phoneNotDDD) {\n      return this.phoneNotDDDMask(value);\n    }\n    if (value && config.money) {\n      return this.writeValueMoney(value, config);\n    }\n    if (value && config.person) {\n      return this.writeValuePerson(value);\n    }\n\n    if (value && config.percent) {\n      return this.writeValuePercent(value);\n    }\n\n    if (this.brmasker.userCaracters) {\n      return this.usingSpecialCharacters(value, this.brmasker.mask, this.brmasker.len);\n    }\n\n    if (value && config.mask) {\n      this.brmasker.mask = config.mask;\n      if (config.len) {\n        this.brmasker.len = config.len;\n      }\n      return this.onInput(value);\n    }\n    return value;\n  }\n\n  /**\n  * For initial value percent\n  * @example <caption>this.writeValuePercent(string)</caption>\n  * @param {string} value\n  * @returns {string} mask intial value\n  */\n\n  writeValuePercent(value: string): string {\n    value.replace(/\\D/gi, '');\n    value.replace(/%/gi, '');\n    return value.replace(/([0-9]{0})$/gi, '%$1');\n  }\n\n  /**\n  * For initial value person\n  * @example <caption>this.writeValuePerson(string)</caption>\n  * @param {string} value\n  * @returns {string} mask intial value\n  */\n  writeValuePerson(value: string): string {\n    if (value.length <= 11) {\n      return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/gi, '\\$1.\\$2.\\$3\\-\\$4');\n    } else {\n      return value.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/gi, '\\$1.\\$2.\\$3\\/\\$4\\-\\$5');\n    }\n  }\n\n  /**\n  * For initial value money\n  * @example <caption>this.writeValueMoney(string, model)</caption>\n  * @param {string} value\n  * @param {BrMaskModel} value\n  * @returns {string} mask intial value\n  */\n  writeValueMoney(value: string, config: BrMaskModel = new BrMaskModel()): string {\n    return this.moneyMask(value, config);\n  }\n\n  /**\n  * Here is one of the main functions\n  * responsible for identifying the type of mask\n  * @example <caption>this.returnValue(string)</caption>\n  * @param {string} value\n  * @returns {string} mask value\n  */\n  returnValue(value: string): string {\n    if (!this.brmasker.mask) { this.brmasker.mask = ''; }\n    if (value) {\n      let formValue = value;\n      if (this.brmasker.type === 'alfa') {\n        formValue = formValue.replace(/\\d/gi, '');\n      }\n      if (this.brmasker.type === 'num') {\n        formValue = formValue.replace(/\\D/gi, '');\n      }\n\n      if (this.brmasker.money) {\n        return this.moneyMask(this.onInput(formValue), this.brmasker);\n      }\n      if (this.brmasker.phone) {\n        return this.phoneMask(formValue);\n      }\n      if (this.brmasker.phoneNotDDD) {\n        return this.phoneNotDDDMask(formValue);\n      }\n      if (this.brmasker.person) {\n        return this.peapollMask(formValue);\n      }\n      if (this.brmasker.percent) {\n        return this.percentMask(formValue);\n      }\n      if (this.brmasker.numberAndTousand) {\n        return this.thousand(formValue);\n      }\n      if (this.brmasker.userCaracters) {\n        return this.usingSpecialCharacters(formValue, this.brmasker.mask, this.brmasker.len);\n      }\n      return this.onInput(formValue);\n    } else {\n      return '';\n    }\n  }\n\n  applyCpfMask(formValue: string) {\n    formValue = formValue.replace(/\\D/gi, '');\n    formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1.$2');\n    formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1.$2');\n    formValue = formValue.replace(/(\\d{3})(\\d{1,2})$/gi, '$1-$2');\n    return formValue;\n  }\n\n  applyCnpjMask(formValue: string) {\n    formValue = formValue.replace(/\\D/gi, '');\n    formValue = formValue.replace(/(\\d{2})(\\d)/gi, '$1.$2');\n    formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1.$2');\n    formValue = formValue.replace(/(\\d{3})(\\d)/gi, '$1/$2');\n    formValue = formValue.replace(/(\\d{4})(\\d{1,4})$/gi, '$1-$2');\n    formValue = formValue.replace(/(\\d{2})(\\d{1,2})$/gi, '$1$2');\n    return formValue;\n  }\n\n  /**\n  * Here we have a mask for percentage\n  * @example <caption>this.percentMask(string)</caption>\n  * @param {string} value\n  * @returns {string} string percentage\n  */\n  private percentMask(value: any): string {\n    let tmp = value;\n    tmp = tmp.replace(/\\D/gi, '');\n    tmp = tmp.replace(/%/gi, '');\n    tmp = tmp.replace(/([0-9]{0})$/gi, '%$1');\n    return tmp;\n  }\n\n  /**\n  * Here we have a mask for phone in 8 digits or 9 digits\n  * @example <caption>this.phoneMask(string)</caption>\n  * @param {string} value\n  * @returns {string} string phone\n  */\n  private phoneMask(value: any): string {\n    let formValue = value;\n    if (formValue.length > 14 || formValue.length === 11) {\n      this.brmasker.len = 15;\n      this.brmasker.mask = '(99) 99999-9999';\n      formValue = formValue.replace(/\\D/gi, '');\n      formValue = formValue.replace(/(\\d{2})(\\d)/gi, '$1 $2');\n      formValue = formValue.replace(/(\\d{5})(\\d)/gi, '$1-$2');\n      formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n    } else {\n      this.brmasker.len = 14;\n      this.brmasker.mask = '(99) 9999-9999';\n      formValue = formValue.replace(/\\D/gi, '');\n      formValue = formValue.replace(/(\\d{2})(\\d)/gi, '$1 $2');\n      formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1-$2');\n      formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n    }\n    return this.onInput(formValue);\n  }\n  /**\n  * Here we have a mask for phone in 8 digits or 9 digits not ddd\n  * @example <caption>this.phoneMask(string)</caption>\n  * @param {string} value\n  * @returns {string} string phone\n  */\n  private phoneNotDDDMask(value: any): string {\n    let formValue = value;\n    if (formValue.length > 9) {\n      this.brmasker.len = 10;\n      this.brmasker.mask = '99999-9999';\n      formValue = formValue.replace(/\\D/gi, '');\n      formValue = formValue.replace(/(\\d{5})(\\d)/gi, '$1-$2');\n      formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n    } else {\n      this.brmasker.len = 9;\n      this.brmasker.mask = '9999-9999';\n      formValue = formValue.replace(/\\D/gi, '');\n      formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1-$2');\n      formValue = formValue.replace(/(\\d{4})(\\d)/gi, '$1$2');\n    }\n    return this.onInput(formValue);\n  }\n\n  /**\n  * Here we have a mask for peapoll ID\n  * @example <caption>this.peapollMask(string)</caption>\n  * @param {string} value\n  * @returns {string} string ID\n  */\n  private peapollMask(value: any): string {\n\n    let formValue = value;\n    if (formValue.length >= 14) {\n      if (formValue.length === 14 && formValue.indexOf('-') > 0) {\n        this.brmasker.len = 14;\n        this.brmasker.mask = '999.999.999-99';\n        formValue = this.applyCpfMask(formValue);\n      } else {\n        this.brmasker.len = 18;\n        this.brmasker.mask = '99.999.999/9999-99';\n        formValue = this.applyCnpjMask(formValue);\n      }\n    } else {\n      this.brmasker.len = 14;\n      this.brmasker.mask = '999.999.999-99';\n      formValue = this.applyCpfMask(formValue);\n    }\n    return this.onInput(formValue);\n  }\n\n  /**\n  * Here we have a mask for money mask\n  * @example <caption>this.moneyMask(string)</caption>\n  * @param {string} value\n  * @param {BrMaskModel} config\n  * @returns {string} string money\n  */\n  private moneyMask(value: any, config: BrMaskModel): string {\n    const decimal = config.decimal || this.brmasker.decimal;\n\n    value = value\n      .replace(/\\D/gi, '')\n      .replace(new RegExp('([0-9]{' + decimal + '})$', 'g'), config.decimalCaracter + '$1');\n    if (value.length === 1 && !this.brmasker.moneyInitHasInt) {\n      const dec = Array(decimal - 1).fill(0);\n      return `0${config.decimalCaracter}${dec.join('')}${value}`;\n    }\n    if (value.length === decimal + 1) {\n      return '0' + value;\n    } else if (value.length > decimal + 2 && value.charAt(0) === '0') {\n      return value.substr(1);\n    }\n    if (config.thousand && value.length > (Number(4) + Number(config.decimal))) {\n      const valueOne = `([0-9]{3})${config.decimalCaracter}([0-9]{${config.decimal}}$)`;\n      value = value.replace(new RegExp(`${valueOne}`, `g`), `${config.thousand}$1${config.decimalCaracter}$2`);\n    }\n    if (config.thousand && value.length > (Number(8) + Number(config.decimal))) {\n      const valueTwo = `([0-9]{3})${config.thousand}([0-9]{3})${config.decimalCaracter}([0-9]{${config.decimal}}$)`;\n      value = value.replace(new RegExp(`${valueTwo}`, `g`), `${config.thousand}$1${config.thousand}$2${config.decimalCaracter}$3`);\n    }\n\n    return value;\n  }\n\n  /**\n  * Responsible for returning the empty mask\n  * @example <caption>this.onInput(string)</caption>\n  * @param {string} value\n  * @returns {string} value\n  */\n  private onInput(value: any): string {\n    return this.formatField(value, this.brmasker.mask, this.brmasker.len);\n  }\n\n  /**\n  * Responsible for special characters\n  * @example <caption>this.usingSpecialCharacters(string)</caption>\n  * @param {string} field\n  * @param {string} mask\n  * @param {number} size\n  * @returns {string} value\n  */\n  private usingSpecialCharacters(field: string, mask: string, size: number): string {\n    if (!size) { size = 99999999999; }\n    let boleanoMascara;\n    const exp = /\\-|\\.|\\,| /gi;\n    const campoSoNumeros = field.toString().replace(exp, '');\n    let posicaoCampo = 0;\n    let NovoValorCampo = '';\n    let sizeMascara = campoSoNumeros.length;\n    for (let i = 0; i < sizeMascara; i++) {\n      if (i < size) {\n        boleanoMascara = ((mask.charAt(i) === '-') || (mask.charAt(i) === '.') || (mask.charAt(i) === ','));\n        if (boleanoMascara) {\n          NovoValorCampo += mask.charAt(i);\n          sizeMascara++;\n        } else {\n          NovoValorCampo += campoSoNumeros.charAt(posicaoCampo);\n          posicaoCampo++;\n        }\n      }\n    }\n    return NovoValorCampo;\n  }\n\n  /**\n  * Responsible formating number\n  * @example <caption>this.thousand(string)</caption>\n  * @param {string} value\n  */\n  private thousand(value: string): string {\n    let val = value.replace(/\\D/gi, '');\n    const reverse = val.toString().split('').reverse().join('');\n    const thousands = reverse.match(/\\d{1,3}/g);\n    if (thousands) {\n      return thousands.join(`${this.brmasker.thousand || '.'}`).split('').reverse().join('');\n    } else {\n      return '';\n    }\n  }\n\n  /**\n  * Responsible for removing special characters\n  * @example <caption>this.formatField(string)</caption>\n  * @param {string} field\n  * @param {string} mask\n  * @param {number} size\n  * @returns {string} value\n  */\n  private formatField(field: string, mask: string, size: number): any {\n    if (!size) { size = 99999999999; }\n    let boleanoMascara;\n    const exp = /\\_|\\-|\\.|\\/|\\(|\\)|\\,|\\*|\\+|\\@|\\#|\\$|\\&|\\%|\\:| /gi;\n    const campoSoNumeros = field.toString().replace(exp, '');\n    let posicaoCampo = 0;\n    let NovoValorCampo = '';\n    let TamanhoMascara = campoSoNumeros.length;\n    for (let i = 0; i < TamanhoMascara; i++) {\n      if (i < size) {\n        boleanoMascara = (mask.charAt(i) === '-') || (mask.charAt(i) === '.') || (mask.charAt(i) === '/');\n        boleanoMascara = boleanoMascara || mask.charAt(i) === '_';\n        boleanoMascara = boleanoMascara || ((mask.charAt(i) === '(') || (mask.charAt(i) === ')') || (mask.charAt(i) === ' '));\n        boleanoMascara = boleanoMascara || ((mask.charAt(i) === ',') || (mask.charAt(i) === '*') || (mask.charAt(i) === '+'));\n        boleanoMascara = boleanoMascara || ((mask.charAt(i) === '@') || (mask.charAt(i) === '#') || (mask.charAt(i) === ':'));\n        boleanoMascara = boleanoMascara || ((mask.charAt(i) === '$') || (mask.charAt(i) === '&') || (mask.charAt(i) === '%'));\n        if (boleanoMascara) {\n          NovoValorCampo += mask.charAt(i);\n          TamanhoMascara++;\n        } else {\n          NovoValorCampo += campoSoNumeros.charAt(posicaoCampo);\n          posicaoCampo++;\n        }\n      }\n    }\n    return NovoValorCampo;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { BrMaskDirective } from './directives/br-mask.directive';\n\n\n@NgModule({\n  declarations: [\n    BrMaskDirective\n  ],\n  exports: [\n    BrMaskDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n})\nexport class BrMaskerModule {}\n","/*\n * Public API Surface of br-packs-mask\n */\n\nexport * from './app.module';\nexport * from './directives/br-mask.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}